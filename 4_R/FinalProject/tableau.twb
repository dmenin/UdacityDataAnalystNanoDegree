<?xml version='1.0' encoding='utf-8' ?>

<workbook source-platform='win' version='8.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8300.15.0219.2230                                -->
  <preferences>
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='8.3'>
      <aliases enabled='yes' />
      <column caption='selectmeasure' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;fixed.acidity&quot;'>
        <calculation class='tableau' formula='&quot;fixed.acidity&quot;' />
        <members>
          <member value='&quot;fixed.acidity&quot;' />
          <member value='&quot;volatile.acidity&quot;' />
          <member value='&quot;citric.acid&quot;' />
          <member value='&quot;residual.sugar&quot;' />
          <member value='&quot;chlorides&quot;' />
          <member value='&quot;free.sulfur.dioxide&quot;' />
          <member value='&quot;total.sulfur.dioxide&quot;' />
          <member value='&quot;density&quot;' />
          <member value='&quot;pH&quot;' />
          <member value='&quot;sulphates&quot;' />
          <member value='&quot;alcohol&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='wineQualityWhites' inline='true' name='textscan.42195.543575104166' version='8.3'>
      <connection class='textscan' directory='C:/git/UdacityDataAnalystNanoDegree/4_R/FinalProject' filename='wineQualityWhites.csv'>
        <relation name='wineQualityWhites#csv' table='[wineQualityWhites#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='real' name='fixed.acidity' ordinal='1' />
            <column datatype='real' name='volatile.acidity' ordinal='2' />
            <column datatype='real' name='citric.acid' ordinal='3' />
            <column datatype='real' name='residual.sugar' ordinal='4' />
            <column datatype='real' name='chlorides' ordinal='5' />
            <column datatype='real' name='free.sulfur.dioxide' ordinal='6' />
            <column datatype='real' name='total.sulfur.dioxide' ordinal='7' />
            <column datatype='real' name='density' ordinal='8' />
            <column datatype='real' name='pH' ordinal='9' />
            <column datatype='real' name='sulphates' ordinal='10' />
            <column datatype='real' name='alcohol' ordinal='11' />
            <column datatype='integer' name='quality' ordinal='12' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[wineQualityWhites#csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fixed.acidity</remote-name>
            <remote-type>5</remote-type>
            <local-name>[fixed.acidity]</local-name>
            <parent-name>[wineQualityWhites#csv]</parent-name>
            <remote-alias>fixed.acidity</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>volatile.acidity</remote-name>
            <remote-type>5</remote-type>
            <local-name>[volatile.acidity]</local-name>
            <parent-name>[wineQualityWhites#csv]</parent-name>
            <remote-alias>volatile.acidity</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>citric.acid</remote-name>
            <remote-type>5</remote-type>
            <local-name>[citric.acid]</local-name>
            <parent-name>[wineQualityWhites#csv]</parent-name>
            <remote-alias>citric.acid</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>residual.sugar</remote-name>
            <remote-type>5</remote-type>
            <local-name>[residual.sugar]</local-name>
            <parent-name>[wineQualityWhites#csv]</parent-name>
            <remote-alias>residual.sugar</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>chlorides</remote-name>
            <remote-type>5</remote-type>
            <local-name>[chlorides]</local-name>
            <parent-name>[wineQualityWhites#csv]</parent-name>
            <remote-alias>chlorides</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>free.sulfur.dioxide</remote-name>
            <remote-type>5</remote-type>
            <local-name>[free.sulfur.dioxide]</local-name>
            <parent-name>[wineQualityWhites#csv]</parent-name>
            <remote-alias>free.sulfur.dioxide</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total.sulfur.dioxide</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total.sulfur.dioxide]</local-name>
            <parent-name>[wineQualityWhites#csv]</parent-name>
            <remote-alias>total.sulfur.dioxide</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>density</remote-name>
            <remote-type>5</remote-type>
            <local-name>[density]</local-name>
            <parent-name>[wineQualityWhites#csv]</parent-name>
            <remote-alias>density</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pH</remote-name>
            <remote-type>5</remote-type>
            <local-name>[pH]</local-name>
            <parent-name>[wineQualityWhites#csv]</parent-name>
            <remote-alias>pH</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sulphates</remote-name>
            <remote-type>5</remote-type>
            <local-name>[sulphates]</local-name>
            <parent-name>[wineQualityWhites#csv]</parent-name>
            <remote-alias>sulphates</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>alcohol</remote-name>
            <remote-type>5</remote-type>
            <local-name>[alcohol]</local-name>
            <parent-name>[wineQualityWhites#csv]</parent-name>
            <remote-alias>alcohol</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>quality</remote-name>
            <remote-type>20</remote-type>
            <local-name>[quality]</local-name>
            <parent-name>[wineQualityWhites#csv]</parent-name>
            <remote-alias>quality</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name></remote-name>
            <remote-type>0</remote-type>
            <parent-name>[wineQualityWhites#csv]</parent-name>
            <remote-alias></remote-alias>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;£&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='rating' datatype='string' name='[Calculation_3040721150159710]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if quality &lt;= 5 then &apos;Bad&apos;&#13;&#10;elseif quality &lt;= 7 then &apos;Average&apos;&#13;&#10;elseif quality &lt;= 8 then &apos;Good&apos;&#13;&#10;else &apos;Excelent&apos;&#13;&#10;end' scope-isolation='false' />
      </column>
      <column caption='measure' datatype='real' name='[Calculation_5730710155743241]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if [Parameters].[Parameter 1] = &apos;fixed.acidity&apos; then fixed.acidity&#13;&#10;elseif [Parameters].[Parameter 1]=&apos;volatile.acidity&apos; then volatile.acidity&#13;&#10;elseif [Parameters].[Parameter 1]=&apos;citric.acid&apos; then citric.acid&#13;&#10;elseif [Parameters].[Parameter 1]=&apos;residual.sugar&apos; then residual.sugar&#13;&#10;elseif [Parameters].[Parameter 1]=&apos;chlorides&apos; then chlorides&#13;&#10;elseif [Parameters].[Parameter 1]=&apos;free.sulfur.dioxide&apos; then free.sulfur.dioxide&#13;&#10;elseif [Parameters].[Parameter 1]=&apos;total.sulfur.dioxide&apos; then total.sulfur.dioxide&#13;&#10;elseif [Parameters].[Parameter 1]=&apos;density&apos; then density&#13;&#10;elseif [Parameters].[Parameter 1]=&apos;pH&apos; then pH&#13;&#10;elseif [Parameters].[Parameter 1]=&apos;sulphates&apos; then sulphates&#13;&#10;elseif [Parameters].[Parameter 1]=&apos;alcohol&apos; then alcohol&#13;&#10;elseif [Parameters].[Parameter 1]=&apos;quality&apos; then quality&#13;&#10;end' scope-isolation='false' />
      </column>
      <column aggregation='Sum' datatype='integer' name='[F1]' role='dimension' type='ordinal'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Quality (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[quality]' />
      </column>
      <column caption='Alcohol' datatype='real' name='[alcohol]' role='measure' type='quantitative'>
      </column>
      <column caption='Chlorides' datatype='real' name='[chlorides]' role='measure' type='quantitative'>
      </column>
      <column caption='Citric.Acid' datatype='real' name='[citric.acid]' role='measure' type='quantitative'>
      </column>
      <column caption='Density' datatype='real' name='[density]' role='measure' type='quantitative'>
      </column>
      <column caption='Fixed.Acidity' datatype='real' name='[fixed.acidity]' role='measure' type='quantitative'>
      </column>
      <column caption='Free.Sulfur.Dioxide' datatype='real' name='[free.sulfur.dioxide]' role='measure' type='quantitative'>
      </column>
      <column caption='P H' datatype='real' name='[pH]' role='measure' type='quantitative'>
      </column>
      <column aggregation='Sum' caption='Quality' datatype='integer' name='[quality]' role='dimension' type='ordinal'>
      </column>
      <column caption='Residual.Sugar' datatype='real' name='[residual.sugar]' role='measure' type='quantitative'>
      </column>
      <column caption='Sulphates' datatype='real' name='[sulphates]' role='measure' type='quantitative'>
      </column>
      <column caption='Total.Sulfur.Dioxide' datatype='real' name='[total.sulfur.dioxide]' role='measure' type='quantitative'>
      </column>
      <column caption='Volatile.Acidity' datatype='real' name='[volatile.acidity]' role='measure' type='quantitative'>
      </column>
      <column-instance column='[Calculation_5730710155743241]' derivation='Avg' name='[avg:Calculation_5730710155743241:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Avg' name='[avg:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[alcohol]' derivation='Avg' name='[avg:alcohol:qk]' pivot='key' type='quantitative' />
      <column-instance column='[chlorides]' derivation='Avg' name='[avg:chlorides:qk]' pivot='key' type='quantitative' />
      <column-instance column='[citric.acid]' derivation='Avg' name='[avg:citric.acid:qk]' pivot='key' type='quantitative' />
      <column-instance column='[density]' derivation='Avg' name='[avg:density:qk]' pivot='key' type='quantitative' />
      <column-instance column='[fixed.acidity]' derivation='Avg' name='[avg:fixed.acidity:qk]' pivot='key' type='quantitative' />
      <column-instance column='[free.sulfur.dioxide]' derivation='Avg' name='[avg:free.sulfur.dioxide:qk]' pivot='key' type='quantitative' />
      <column-instance column='[pH]' derivation='Avg' name='[avg:pH:qk]' pivot='key' type='quantitative' />
      <column-instance column='[residual.sugar]' derivation='Avg' name='[avg:residual.sugar:qk]' pivot='key' type='quantitative' />
      <column-instance column='[sulphates]' derivation='Avg' name='[avg:sulphates:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total.sulfur.dioxide]' derivation='Avg' name='[avg:total.sulfur.dioxide:qk]' pivot='key' type='quantitative' />
      <column-instance column='[volatile.acidity]' derivation='Avg' name='[avg:volatile.acidity:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_3040721150159710]' derivation='None' name='[none:Calculation_3040721150159710:nk]' pivot='key' type='nominal' />
      <column-instance column='[quality]' derivation='None' name='[none:quality:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_5730710155743241]' derivation='Sum' name='[sum:Calculation_5730710155743241:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[alcohol]' derivation='Sum' name='[sum:alcohol:qk]' pivot='key' type='quantitative' />
      <column-instance column='[citric.acid]' derivation='Sum' name='[sum:citric.acid:qk]' pivot='key' type='quantitative' />
      <column-instance column='[density]' derivation='Sum' name='[sum:density:qk]' pivot='key' type='quantitative' />
      <column-instance column='[fixed.acidity]' derivation='Sum' name='[sum:fixed.acidity:qk]' pivot='key' type='quantitative' />
      <column-instance column='[free.sulfur.dioxide]' derivation='Sum' name='[sum:free.sulfur.dioxide:qk]' pivot='key' type='quantitative' />
      <column-instance column='[pH]' derivation='Sum' name='[sum:pH:qk]' pivot='key' type='quantitative' />
      <column-instance column='[residual.sugar]' derivation='Sum' name='[sum:residual.sugar:qk]' pivot='key' type='quantitative' />
      <column-instance column='[sulphates]' derivation='Sum' name='[sum:sulphates:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total.sulfur.dioxide]' derivation='Sum' name='[sum:total.sulfur.dioxide:qk]' pivot='key' type='quantitative' />
      <column-instance column='[volatile.acidity]' derivation='Sum' name='[sum:volatile.acidity:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.490926' measure-ordering='alphabetic' measure-percentage='0.391595' show-hidden-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;[textscan.42195.543575104166].[sum:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[textscan.42195.543575104166].[sum:Calculation_5730710155743241:qk]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[textscan.42195.543575104166].[avg:Calculation_5730710155743241:qk]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[textscan.42195.543575104166].[sum:volatile.acidity:qk]&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;[textscan.42195.543575104166].[avg:sulphates:qk]&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;[textscan.42195.543575104166].[avg:free.sulfur.dioxide:qk]&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;[textscan.42195.543575104166].[sum:pH:qk]&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;[textscan.42195.543575104166].[avg:residual.sugar:qk]&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;[textscan.42195.543575104166].[sum:total.sulfur.dioxide:qk]&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;[textscan.42195.543575104166].[avg:fixed.acidity:qk]&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;[textscan.42195.543575104166].[sum:residual.sugar:qk]&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;[textscan.42195.543575104166].[sum:fixed.acidity:qk]&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;[textscan.42195.543575104166].[avg:alcohol:qk]&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;[textscan.42195.543575104166].[avg:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;[textscan.42195.543575104166].[avg:total.sulfur.dioxide:qk]&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;[textscan.42195.543575104166].[sum:sulphates:qk]&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;[textscan.42195.543575104166].[none:quality:ok]&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;[textscan.42195.543575104166].[sum:alcohol:qk]&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;[textscan.42195.543575104166].[avg:citric.acid:qk]&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;[textscan.42195.543575104166].[avg:chlorides:qk]&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;[textscan.42195.543575104166].[sum:density:qk]&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;[textscan.42195.543575104166].[avg:pH:qk]&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;[textscan.42195.543575104166].[sum:Alcohol (copy):qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[textscan.42195.543575104166].[avg:density:qk]&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;[textscan.42195.543575104166].[avg:volatile.acidity:qk]&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;[textscan.42195.543575104166].[sum:free.sulfur.dioxide:qk]&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;[textscan.42195.543575104166].[sum:citric.acid:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:quality:ok]' type='palette'>
            <map to='#1f77b4'>
              <bucket>3</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>5</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>8</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>7</bucket>
            </map>
            <map to='#d62728'>
              <bucket>6</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>9</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>4</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_3040721150159710:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;Average&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Excelent&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Good&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Bad&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Reino Unido&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <datasource-dependencies datasource='Parameters'>
        <column caption='selectmeasure' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;fixed.acidity&quot;'>
          <calculation class='tableau' formula='&quot;fixed.acidity&quot;' />
          <members>
            <member value='&quot;fixed.acidity&quot;' />
            <member value='&quot;volatile.acidity&quot;' />
            <member value='&quot;citric.acid&quot;' />
            <member value='&quot;residual.sugar&quot;' />
            <member value='&quot;chlorides&quot;' />
            <member value='&quot;free.sulfur.dioxide&quot;' />
            <member value='&quot;total.sulfur.dioxide&quot;' />
            <member value='&quot;density&quot;' />
            <member value='&quot;pH&quot;' />
            <member value='&quot;sulphates&quot;' />
            <member value='&quot;alcohol&quot;' />
          </members>
        </column>
      </datasource-dependencies>
    </datasource>
    <datasource caption='Book3' inline='true' name='textscan.42200.682099178244' version='8.3'>
      <connection class='textscan' directory='C:/Users/dim/Desktop' filename='Book3.csv'>
        <relation name='Book3#csv' table='[Book3#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_GB'>
            <column datatype='integer' name='VAL' ordinal='0' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>VAL</remote-name>
            <remote-type>20</remote-type>
            <local-name>[VAL]</local-name>
            <parent-name>[Book3#csv]</parent-name>
            <remote-alias>VAL</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name></remote-name>
            <remote-type>0</remote-type>
            <parent-name>[Book3#csv]</parent-name>
            <remote-alias></remote-alias>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;£&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Reino Unido&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='AVG bars'>
      <table>
        <view>
          <datasources>
            <datasource caption='wineQualityWhites' name='textscan.42195.543575104166' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='textscan.42195.543575104166'>
            <column caption='measure' datatype='real' name='[Calculation_5730710155743241]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [Parameters].[Parameter 1] = &apos;fixed.acidity&apos; then fixed.acidity&#13;&#10;elseif [Parameters].[Parameter 1]=&apos;volatile.acidity&apos; then volatile.acidity&#13;&#10;elseif [Parameters].[Parameter 1]=&apos;citric.acid&apos; then citric.acid&#13;&#10;elseif [Parameters].[Parameter 1]=&apos;residual.sugar&apos; then residual.sugar&#13;&#10;elseif [Parameters].[Parameter 1]=&apos;chlorides&apos; then chlorides&#13;&#10;elseif [Parameters].[Parameter 1]=&apos;free.sulfur.dioxide&apos; then free.sulfur.dioxide&#13;&#10;elseif [Parameters].[Parameter 1]=&apos;total.sulfur.dioxide&apos; then total.sulfur.dioxide&#13;&#10;elseif [Parameters].[Parameter 1]=&apos;density&apos; then density&#13;&#10;elseif [Parameters].[Parameter 1]=&apos;pH&apos; then pH&#13;&#10;elseif [Parameters].[Parameter 1]=&apos;sulphates&apos; then sulphates&#13;&#10;elseif [Parameters].[Parameter 1]=&apos;alcohol&apos; then alcohol&#13;&#10;elseif [Parameters].[Parameter 1]=&apos;quality&apos; then quality&#13;&#10;end' scope-isolation='false' />
            </column>
            <column-instance column='[Calculation_5730710155743241]' derivation='Avg' name='[avg:Calculation_5730710155743241:qk]' pivot='key' type='quantitative' />
            <column-instance column='[quality]' derivation='None' name='[none:quality:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='Quality' datatype='integer' name='[quality]' role='dimension' type='ordinal'>
            </column>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.42195.543575104166].[avg:Calculation_5730710155743241:qk]</rows>
        <cols>[textscan.42195.543575104166].[none:quality:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 10'>
      <table>
        <view>
          <datasources>
            <datasource caption='wineQualityWhites' name='textscan.42195.543575104166' />
          </datasources>
          <datasource-dependencies datasource='textscan.42195.543575104166'>
            <column aggregation='Sum' datatype='integer' name='[F1]' role='dimension' type='ordinal'>
            </column>
            <column caption='Fixed.Acidity' datatype='real' name='[fixed.acidity]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[F1]' derivation='None' name='[none:F1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[quality]' derivation='None' name='[none:quality:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='Quality' datatype='integer' name='[quality]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[fixed.acidity]' derivation='Sum' name='[sum:fixed.acidity:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42195.543575104166].[none:quality:ok]'>
            <groupfilter function='member' level='[none:quality:ok]' member='9' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[textscan.42195.543575104166].[none:quality:ok]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.42195.543575104166].[sum:fixed.acidity:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([textscan.42195.543575104166].[none:quality:ok] / [textscan.42195.543575104166].[none:F1:ok])</rows>
        <cols></cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 11'>
      <table>
        <view>
          <datasources>
            <datasource caption='wineQualityWhites' name='textscan.42195.543575104166' />
          </datasources>
          <datasource-dependencies datasource='textscan.42195.543575104166'>
            <column caption='rating' datatype='string' name='[Calculation_3040721150159710]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if quality &lt;= 5 then &apos;Bad&apos;&#13;&#10;elseif quality &lt;= 7 then &apos;Average&apos;&#13;&#10;elseif quality &lt;= 8 then &apos;Good&apos;&#13;&#10;else &apos;Excelent&apos;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Alcohol' datatype='real' name='[alcohol]' role='measure' type='quantitative'>
            </column>
            <column caption='Free.Sulfur.Dioxide' datatype='real' name='[free.sulfur.dioxide]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Calculation_3040721150159710]' derivation='None' name='[none:Calculation_3040721150159710:nk]' pivot='key' type='nominal' />
            <column-instance column='[alcohol]' derivation='Sum' name='[sum:alcohol:qk]' pivot='key' type='quantitative' />
            <column-instance column='[free.sulfur.dioxide]' derivation='Sum' name='[sum:free.sulfur.dioxide:qk]' pivot='key' type='quantitative' />
            <column-instance column='[volatile.acidity]' derivation='Sum' name='[sum:volatile.acidity:qk]' pivot='key' type='quantitative' />
            <column caption='Volatile.Acidity' datatype='real' name='[volatile.acidity]' role='measure' type='quantitative'>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42195.543575104166].[none:Calculation_3040721150159710:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_3040721150159710:nk]' member='&quot;Average&quot;' />
              <groupfilter function='member' level='[none:Calculation_3040721150159710:nk]' member='&quot;Bad&quot;' />
              <groupfilter function='member' level='[none:Calculation_3040721150159710:nk]' member='&quot;Good&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[textscan.42195.543575104166].[none:Calculation_3040721150159710:nk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.42195.543575104166].[none:Calculation_3040721150159710:nk]' />
              <size column='[textscan.42195.543575104166].[sum:free.sulfur.dioxide:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[textscan.42195.543575104166].[sum:alcohol:qk]</rows>
        <cols>[textscan.42195.543575104166].[sum:volatile.acidity:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 6'>
      <table>
        <view>
          <datasources>
            <datasource caption='wineQualityWhites' name='textscan.42195.543575104166' />
          </datasources>
          <datasource-dependencies datasource='textscan.42195.543575104166'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Alcohol' datatype='real' name='[alcohol]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[alcohol]' derivation='Avg' name='[avg:alcohol:qk]' pivot='key' type='quantitative' />
            <column-instance column='[chlorides]' derivation='Avg' name='[avg:chlorides:qk]' pivot='key' type='quantitative' />
            <column-instance column='[citric.acid]' derivation='Avg' name='[avg:citric.acid:qk]' pivot='key' type='quantitative' />
            <column-instance column='[density]' derivation='Avg' name='[avg:density:qk]' pivot='key' type='quantitative' />
            <column-instance column='[fixed.acidity]' derivation='Avg' name='[avg:fixed.acidity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[free.sulfur.dioxide]' derivation='Avg' name='[avg:free.sulfur.dioxide:qk]' pivot='key' type='quantitative' />
            <column-instance column='[pH]' derivation='Avg' name='[avg:pH:qk]' pivot='key' type='quantitative' />
            <column-instance column='[residual.sugar]' derivation='Avg' name='[avg:residual.sugar:qk]' pivot='key' type='quantitative' />
            <column-instance column='[sulphates]' derivation='Avg' name='[avg:sulphates:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total.sulfur.dioxide]' derivation='Avg' name='[avg:total.sulfur.dioxide:qk]' pivot='key' type='quantitative' />
            <column-instance column='[volatile.acidity]' derivation='Avg' name='[avg:volatile.acidity:qk]' pivot='key' type='quantitative' />
            <column caption='Chlorides' datatype='real' name='[chlorides]' role='measure' type='quantitative'>
            </column>
            <column caption='Citric.Acid' datatype='real' name='[citric.acid]' role='measure' type='quantitative'>
            </column>
            <column caption='Density' datatype='real' name='[density]' role='measure' type='quantitative'>
            </column>
            <column caption='Fixed.Acidity' datatype='real' name='[fixed.acidity]' role='measure' type='quantitative'>
            </column>
            <column caption='Free.Sulfur.Dioxide' datatype='real' name='[free.sulfur.dioxide]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[quality]' derivation='None' name='[none:quality:ok]' pivot='key' type='ordinal' />
            <column caption='P H' datatype='real' name='[pH]' role='measure' type='quantitative'>
            </column>
            <column aggregation='Sum' caption='Quality' datatype='integer' name='[quality]' role='dimension' type='ordinal'>
            </column>
            <column caption='Residual.Sugar' datatype='real' name='[residual.sugar]' role='measure' type='quantitative'>
            </column>
            <column caption='Sulphates' datatype='real' name='[sulphates]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[alcohol]' derivation='Sum' name='[sum:alcohol:qk]' pivot='key' type='quantitative' />
            <column caption='Total.Sulfur.Dioxide' datatype='real' name='[total.sulfur.dioxide]' role='measure' type='quantitative'>
            </column>
            <column caption='Volatile.Acidity' datatype='real' name='[volatile.acidity]' role='measure' type='quantitative'>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42195.543575104166].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42195.543575104166].[avg:alcohol:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42195.543575104166].[avg:density:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42195.543575104166].[avg:chlorides:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42195.543575104166].[avg:citric.acid:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42195.543575104166].[avg:fixed.acidity:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42195.543575104166].[avg:volatile.acidity:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42195.543575104166].[avg:residual.sugar:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42195.543575104166].[avg:free.sulfur.dioxide:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42195.543575104166].[avg:total.sulfur.dioxide:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42195.543575104166].[avg:pH:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42195.543575104166].[avg:sulphates:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[textscan.42195.543575104166].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[textscan.42195.543575104166].[avg:alcohol:qk]&quot;</bucket>
              <bucket>&quot;[textscan.42195.543575104166].[avg:density:qk]&quot;</bucket>
              <bucket>&quot;[textscan.42195.543575104166].[avg:chlorides:qk]&quot;</bucket>
              <bucket>&quot;[textscan.42195.543575104166].[avg:citric.acid:qk]&quot;</bucket>
              <bucket>&quot;[textscan.42195.543575104166].[avg:fixed.acidity:qk]&quot;</bucket>
              <bucket>&quot;[textscan.42195.543575104166].[avg:volatile.acidity:qk]&quot;</bucket>
              <bucket>&quot;[textscan.42195.543575104166].[avg:residual.sugar:qk]&quot;</bucket>
              <bucket>&quot;[textscan.42195.543575104166].[avg:free.sulfur.dioxide:qk]&quot;</bucket>
              <bucket>&quot;[textscan.42195.543575104166].[avg:total.sulfur.dioxide:qk]&quot;</bucket>
              <bucket>&quot;[textscan.42195.543575104166].[avg:pH:qk]&quot;</bucket>
              <bucket>&quot;[textscan.42195.543575104166].[avg:sulphates:qk]&quot;</bucket>
              <bucket>&quot;[textscan.42195.543575104166].[sum:alcohol:qk]&quot;</bucket>
              <bucket>&quot;[textscan.42195.543575104166].[sum:Number of Records:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='natural' column='[textscan.42195.543575104166].[none:quality:ok]' direction='ASC' />
          <slices>
            <column>[textscan.42195.543575104166].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.42195.543575104166].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.42195.543575104166].[Multiple Values]</rows>
        <cols>([textscan.42195.543575104166].[:Measure Names] / [textscan.42195.543575104166].[none:quality:ok])</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 7'>
      <table>
        <view>
          <datasources>
            <datasource caption='wineQualityWhites' name='textscan.42195.543575104166' />
          </datasources>
          <datasource-dependencies datasource='textscan.42195.543575104166'>
            <column caption='Fixed.Acidity' datatype='real' name='[fixed.acidity]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[quality]' derivation='None' name='[none:quality:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='Quality' datatype='integer' name='[quality]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[fixed.acidity]' derivation='Sum' name='[sum:fixed.acidity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[volatile.acidity]' derivation='Sum' name='[sum:volatile.acidity:qk]' pivot='key' type='quantitative' />
            <column caption='Volatile.Acidity' datatype='real' name='[volatile.acidity]' role='measure' type='quantitative'>
            </column>
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.42195.543575104166].[none:quality:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[textscan.42195.543575104166].[sum:volatile.acidity:qk]</rows>
        <cols>[textscan.42195.543575104166].[sum:fixed.acidity:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 8'>
      <table>
        <view>
          <datasources>
            <datasource caption='wineQualityWhites' name='textscan.42195.543575104166' />
          </datasources>
          <datasource-dependencies datasource='textscan.42195.543575104166'>
            <column caption='Alcohol' datatype='real' name='[alcohol]' role='measure' type='quantitative'>
            </column>
            <column caption='Chlorides' datatype='real' name='[chlorides]' role='measure' type='quantitative'>
            </column>
            <column caption='Density' datatype='real' name='[density]' role='measure' type='quantitative'>
            </column>
            <column caption='Residual.Sugar' datatype='real' name='[residual.sugar]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[alcohol]' derivation='Sum' name='[sum:alcohol:qk]' pivot='key' type='quantitative' />
            <column-instance column='[chlorides]' derivation='Sum' name='[sum:chlorides:qk]' pivot='key' type='quantitative' />
            <column-instance column='[density]' derivation='Sum' name='[sum:density:qk]' pivot='key' type='quantitative' />
            <column-instance column='[residual.sugar]' derivation='Sum' name='[sum:residual.sugar:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total.sulfur.dioxide]' derivation='Sum' name='[sum:total.sulfur.dioxide:qk]' pivot='key' type='quantitative' />
            <column caption='Total.Sulfur.Dioxide' datatype='real' name='[total.sulfur.dioxide]' role='measure' type='quantitative'>
            </column>
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[textscan.42195.543575104166].[sum:residual.sugar:qk]' />
              <color column='[textscan.42195.543575104166].[sum:total.sulfur.dioxide:qk]' />
            </encodings>
          </pane>
          <pane id='1' x-axis-name='[textscan.42195.543575104166].[sum:density:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[textscan.42195.543575104166].[sum:residual.sugar:qk]' />
              <color column='[textscan.42195.543575104166].[sum:total.sulfur.dioxide:qk]' />
            </encodings>
          </pane>
          <pane id='2' x-axis-name='[textscan.42195.543575104166].[sum:chlorides:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[textscan.42195.543575104166].[sum:residual.sugar:qk]' />
              <color column='[textscan.42195.543575104166].[sum:total.sulfur.dioxide:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[textscan.42195.543575104166].[sum:alcohol:qk]</rows>
        <cols>([textscan.42195.543575104166].[sum:density:qk] + [textscan.42195.543575104166].[sum:chlorides:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 9'>
      <table>
        <view>
          <datasources>
            <datasource caption='Book3' name='textscan.42200.682099178244' />
          </datasources>
          <datasource-dependencies datasource='textscan.42200.682099178244'>
            <column datatype='integer' name='[VAL]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[VAL]' derivation='Sum' name='[sum:VAL:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <reference-line axis-column='[textscan.42200.682099178244].[sum:VAL:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' formula='average' id='refline0' label-type='automatic' scope='per-cell' symmetric='false' value-column='[textscan.42200.682099178244].[sum:VAL:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.42200.682099178244].[sum:VAL:qk]</rows>
        <cols></cols>
      </table>
    </worksheet>
    <worksheet name='box_plots'>
      <table>
        <view>
          <datasources>
            <datasource caption='wineQualityWhites' name='textscan.42195.543575104166' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='textscan.42195.543575104166'>
            <column caption='measure' datatype='real' name='[Calculation_5730710155743241]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [Parameters].[Parameter 1] = &apos;fixed.acidity&apos; then fixed.acidity&#13;&#10;elseif [Parameters].[Parameter 1]=&apos;volatile.acidity&apos; then volatile.acidity&#13;&#10;elseif [Parameters].[Parameter 1]=&apos;citric.acid&apos; then citric.acid&#13;&#10;elseif [Parameters].[Parameter 1]=&apos;residual.sugar&apos; then residual.sugar&#13;&#10;elseif [Parameters].[Parameter 1]=&apos;chlorides&apos; then chlorides&#13;&#10;elseif [Parameters].[Parameter 1]=&apos;free.sulfur.dioxide&apos; then free.sulfur.dioxide&#13;&#10;elseif [Parameters].[Parameter 1]=&apos;total.sulfur.dioxide&apos; then total.sulfur.dioxide&#13;&#10;elseif [Parameters].[Parameter 1]=&apos;density&apos; then density&#13;&#10;elseif [Parameters].[Parameter 1]=&apos;pH&apos; then pH&#13;&#10;elseif [Parameters].[Parameter 1]=&apos;sulphates&apos; then sulphates&#13;&#10;elseif [Parameters].[Parameter 1]=&apos;alcohol&apos; then alcohol&#13;&#10;elseif [Parameters].[Parameter 1]=&apos;quality&apos; then quality&#13;&#10;end' scope-isolation='false' />
            </column>
            <column aggregation='Sum' datatype='integer' name='[F1]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[F1]' derivation='None' name='[none:F1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[quality]' derivation='None' name='[none:quality:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='Quality' datatype='integer' name='[quality]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[Calculation_5730710155743241]' derivation='Sum' name='[sum:Calculation_5730710155743241:qk]' pivot='key' type='quantitative' />
            <column-instance column='[F1]' derivation='Sum' name='[sum:F1:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42195.543575104166].[none:F1:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='1' function='range' level='[none:F1:ok]' to='2781' />
              <groupfilter from='2783' function='range' level='[none:F1:ok]' to='4898' />
            </groupfilter>
          </filter>
          <slices>
            <column>[textscan.42195.543575104166].[none:F1:ok]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <lod column='[textscan.42195.543575104166].[none:quality:ok]' />
              <tooltip column='[textscan.42195.543575104166].[sum:F1:qk]' />
            </encodings>
            <reference-line axis-column='[textscan.42195.543575104166].[sum:Calculation_5730710155743241:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' formula='average' id='refline0' label-type='automatic' scope='per-cell' symmetric='false' value-column='[textscan.42195.543575104166].[sum:Calculation_5730710155743241:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.42195.543575104166].[sum:Calculation_5730710155743241:qk]</rows>
        <cols>[textscan.42195.543575104166].[none:quality:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='histogram'>
      <table>
        <view>
          <datasources>
            <datasource caption='wineQualityWhites' name='textscan.42195.543575104166' />
          </datasources>
          <datasource-dependencies datasource='textscan.42195.543575104166'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[quality]' derivation='None' name='[none:quality:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='Quality' datatype='integer' name='[quality]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.42195.543575104166].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.42195.543575104166].[sum:Number of Records:qk]</rows>
        <cols>[textscan.42195.543575104166].[none:quality:ok]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='0' name='histogram'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[textscan.42195.543575104166].[none:quality:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='box_plots'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='list' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[textscan.42195.543575104166].[none:F1:ok]</field>
          <field>[textscan.42195.543575104166].[none:quality:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='AVG bars'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='list' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[textscan.42195.543575104166].[none:quality:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='0' param='[textscan.42195.543575104166].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[textscan.42195.543575104166].[:Measure Names]</field>
          <field>[textscan.42195.543575104166].[Multiple Values]</field>
          <field>[textscan.42195.543575104166].[none:quality:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 7'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.42195.543575104166].[none:quality:ok]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[textscan.42195.543575104166].[none:quality:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 8'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[textscan.42195.543575104166].[sum:total.sulfur.dioxide:qk]' type='color' />
            <card pane-specification-id='1' param='[textscan.42195.543575104166].[sum:residual.sugar:qk]' type='size' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[textscan.42195.543575104166].[:Measure Names]</field>
        </color-one-way>
      </highlight>
      <selection-collection>
        <tuple-selection>
          <tuple-reference>
            <tuple-descriptor>
              <pane-descriptor>
                <x-fields>
                  <field>[textscan.42195.543575104166].[sum:chlorides:qk]</field>
                </x-fields>
                <y-fields>
                  <field>[textscan.42195.543575104166].[sum:alcohol:qk]</field>
                </y-fields>
              </pane-descriptor>
              <columns>
                <field>[textscan.42195.543575104166].[sum:alcohol:qk]</field>
                <field>[textscan.42195.543575104166].[sum:chlorides:qk]</field>
                <field>[textscan.42195.543575104166].[sum:density:qk]</field>
                <field>[textscan.42195.543575104166].[sum:residual.sugar:qk]</field>
                <field>[textscan.42195.543575104166].[sum:total.sulfur.dioxide:qk]</field>
              </columns>
            </tuple-descriptor>
            <tuple>
              <value>8.6999999999999993</value>
              <value>0.050999999999999997</value>
              <value>0.99885999999999997</value>
              <value>13.6</value>
              <value>134.0</value>
            </tuple>
          </tuple-reference>
        </tuple-selection>
      </selection-collection>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 9'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 10'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[textscan.42195.543575104166].[none:F1:ok]</field>
          <field>[textscan.42195.543575104166].[none:quality:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='1' name='Sheet 11'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.42195.543575104166].[sum:free.sulfur.dioxide:qk]' type='size' />
            <card pane-specification-id='0' param='[textscan.42195.543575104166].[none:Calculation_3040721150159710:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[textscan.42195.543575104166].[none:Calculation_3040721150159710:nk]</field>
          <field>[textscan.42195.543575104166].[none:quality:ok]</field>
        </color-one-way>
      </highlight>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='histogram' width='192'>
      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
      ojHw9gRpzwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='box_plots' width='192'>
      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
      G5QAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='AVG bars' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 6' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 7' width='192'>
      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
      PkoAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 8' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 9' width='107'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='144' name='Sheet 10' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 11' width='192'>
      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
      tvj5gCs7FFAAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
